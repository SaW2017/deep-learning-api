{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wacht\\\\WebstormProjects\\\\deep-learning\\\\dl-videosearch-react\\\\src\\\\components\\\\AddConcept.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddConcept.propTypes = {};\n\nconst AddConcept = props => {\n  _s();\n\n  // creating states\n  const [conceptId, setConceptId] = useState(0);\n  const [conceptName, setConceptName] = useState(\"\");\n  const [conceptList, setConceptList] = useState([]); // hook will be called whenever page will be refreshed\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3002/concept\").then(response => {\n      setConceptList(response.data);\n    });\n  }, []); //function for adding data\n\n  const addConcept = () => {\n    // adding route from backend\n    Axios.post(\"http://localhost:3002/insert\", {\n      conceptId: conceptId,\n      conceptName: conceptName\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddConcept\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Concept ID:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: event => {\n        setConceptId(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Concept Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: event => {\n        setConceptName(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addConcept,\n      children: \"Add Concept\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddConcept, \"/blITC1VK58qm67yQ93IovX1+EU=\");\n\n_c = AddConcept;\nexport default AddConcept;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddConcept\");","map":{"version":3,"sources":["C:/Users/wacht/WebstormProjects/deep-learning/dl-videosearch-react/src/components/AddConcept.js"],"names":["PropTypes","useEffect","useState","Axios","AddConcept","propTypes","props","conceptId","setConceptId","conceptName","setConceptName","conceptList","setConceptList","get","then","response","data","addConcept","post","event","target","value"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEAC,UAAU,CAACC,SAAX,GAAuB,EAAvB;;AAIA,MAAMD,UAAU,GAAIE,KAAD,IAAW;AAAA;;AAC1B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C,CAJ0B,CAM1B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACU,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AAC1DH,MAAAA,cAAc,CAACG,QAAQ,CAACC,IAAV,CAAd;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT,CAP0B,CAa1B;;AACA,QAAMC,UAAU,GAAG,MAAM;AACrB;AACAd,IAAAA,KAAK,CAACe,IAAN,CAAW,8BAAX,EAA2C;AACvCX,MAAAA,SAAS,EAAEA,SAD4B;AAEvCE,MAAAA,WAAW,EAAEA;AAF0B,KAA3C;AAIH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,QAAQ,EAAGU,KAAK,IAAI;AAChBX,QAAAA,YAAY,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH;AAJL;AAAA;AAAA;AAAA;AAAA,YAHJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,QAAQ,EAAGF,KAAK,IAAI;AAChBT,QAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACH;AAJL;AAAA;AAAA;AAAA;AAAA,YAVJ,eAeI;AAAQ,MAAA,OAAO,EAAEJ,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAzCD;;GAAMb,U;;KAAAA,U;AA2CN,eAAeA,UAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport {useEffect, useState} from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nAddConcept.propTypes = {\r\n\r\n};\r\n\r\nconst AddConcept = (props) => {\r\n    // creating states\r\n    const [conceptId, setConceptId] = useState(0);\r\n    const [conceptName, setConceptName] = useState(\"\");\r\n    const [conceptList, setConceptList] = useState([]);\r\n\r\n    // hook will be called whenever page will be refreshed\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:3002/concept\").then((response) => {\r\n            setConceptList(response.data);\r\n        })\r\n    }, [])\r\n\r\n    //function for adding data\r\n    const addConcept = () => {\r\n        // adding route from backend\r\n        Axios.post(\"http://localhost:3002/insert\", {\r\n            conceptId: conceptId,\r\n            conceptName: conceptName\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"AddConcept\">\r\n            {/*  Just to Test for now*/}\r\n            <label>Concept ID:</label>\r\n            <input\r\n                type=\"number\"\r\n                onChange={(event => {\r\n                    setConceptId(event.target.value)\r\n                })}\r\n            />\r\n            <label>Concept Name:</label>\r\n            <input\r\n                type=\"text\"\r\n                onChange={(event => {\r\n                    setConceptName(event.target.value)\r\n                })}/>\r\n            <button onClick={addConcept}>Add Concept</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddConcept;"]},"metadata":{},"sourceType":"module"}