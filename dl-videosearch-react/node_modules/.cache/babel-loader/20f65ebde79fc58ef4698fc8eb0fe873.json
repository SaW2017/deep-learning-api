{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wacht\\\\WebstormProjects\\\\deep-learning\\\\dl-videosearch-react\\\\src\\\\components\\\\AddConcept.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddConcept = () => {\n  _s();\n\n  // creating states\n  const [conceptId, setConceptId] = useState(0);\n  const [conceptName, setConceptName] = useState(\"\");\n  const [conceptList, setConceptList] = useState([]); // hook will be called whenever page will be refreshed\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3002/concept\").then(response => {\n      setConceptList(response.data);\n    });\n  }, []); //function for adding data\n\n  const addConcept = () => {\n    // adding route from backend\n    Axios.post(\"http://localhost:3002/insert\", {\n      conceptId: conceptId,\n      conceptName: conceptName\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddConcept\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Concept ID:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: event => {\n        setConceptId(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Concept Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: event => {\n        setConceptName(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addConcept,\n      children: \"Add Concept\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Existing Concepts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), conceptList.map((value, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [value.conceptId, \": \", value.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddConcept, \"/blITC1VK58qm67yQ93IovX1+EU=\");\n\n_c = AddConcept;\nexport default AddConcept;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddConcept\");","map":{"version":3,"sources":["C:/Users/wacht/WebstormProjects/deep-learning/dl-videosearch-react/src/components/AddConcept.js"],"names":["useEffect","useState","Axios","AddConcept","conceptId","setConceptId","conceptName","setConceptName","conceptList","setConceptList","get","then","response","data","addConcept","post","event","target","value","map","key","name"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C,CAJqB,CAMrB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACQ,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AAC1DH,MAAAA,cAAc,CAACG,QAAQ,CAACC,IAAV,CAAd;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT,CAPqB,CAarB;;AACA,QAAMC,UAAU,GAAG,MAAM;AACrB;AACAZ,IAAAA,KAAK,CAACa,IAAN,CAAW,8BAAX,EAA2C;AACvCX,MAAAA,SAAS,EAAEA,SAD4B;AAEvCE,MAAAA,WAAW,EAAEA;AAF0B,KAA3C;AAIH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,QAAQ,EAAGU,KAAK,IAAI;AAChBX,QAAAA,YAAY,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH;AAJL;AAAA;AAAA;AAAA;AAAA,YAHJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,QAAQ,EAAGF,KAAK,IAAI;AAChBT,QAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACH;AAJL;AAAA;AAAA;AAAA;AAAA,YAVJ,eAeI;AAAQ,MAAA,OAAO,EAAEJ,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eAgBI;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ,EAkBKN,WAAW,CAACW,GAAZ,CAAgB,CAACD,KAAD,EAAQE,GAAR,KAAgB;AAC7B,0BACI;AAAA,+BACI;AAAA,qBAAIF,KAAK,CAACd,SAAV,QAAuBc,KAAK,CAACG,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAIH,KALA,CAlBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAjDD;;GAAMlB,U;;KAAAA,U;AAmDN,eAAeA,UAAf","sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nconst AddConcept = () => {\r\n    // creating states\r\n    const [conceptId, setConceptId] = useState(0);\r\n    const [conceptName, setConceptName] = useState(\"\");\r\n    const [conceptList, setConceptList] = useState([]);\r\n\r\n    // hook will be called whenever page will be refreshed\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:3002/concept\").then((response) => {\r\n            setConceptList(response.data);\r\n        })\r\n    }, [])\r\n\r\n    //function for adding data\r\n    const addConcept = () => {\r\n        // adding route from backend\r\n        Axios.post(\"http://localhost:3002/insert\", {\r\n            conceptId: conceptId,\r\n            conceptName: conceptName\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"AddConcept\">\r\n            {/*  Just to Test for now*/}\r\n            <label>Concept ID:</label>\r\n            <input\r\n                type=\"number\"\r\n                onChange={(event => {\r\n                    setConceptId(event.target.value)\r\n                })}\r\n            />\r\n            <label>Concept Name:</label>\r\n            <input\r\n                type=\"text\"\r\n                onChange={(event => {\r\n                    setConceptName(event.target.value)\r\n                })}/>\r\n            <button onClick={addConcept}>Add Concept</button>\r\n            <br/>\r\n            <h1>Existing Concepts</h1>\r\n            {conceptList.map((value, key) => {\r\n                return (\r\n                    <div>\r\n                        <p>{value.conceptId}: {value.name}</p>\r\n                    </div>);\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddConcept;"]},"metadata":{},"sourceType":"module"}