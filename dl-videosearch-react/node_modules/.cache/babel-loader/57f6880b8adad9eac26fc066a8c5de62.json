{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wacht\\\\WebstormProjects\\\\deep-learning\\\\dl-videosearch-react\\\\src\\\\components\\\\Searchbar.js\",\n    _s = $RefreshSig$();\n\nimport AsyncSelect from \"react-select/async\";\nimport { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Searchbar = props => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [fullImageList, setFullImageList] = useState([]);\n  const [resultImageList, setResultImageList] = useState([]); // initial get all Images\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3002/concepts\").then(response => {\n      setFullImageList(response.data);\n    });\n  }, []); //function for searching data\n\n  const search = searchTerm => {\n    setSearchTerm(searchTerm);\n    fullImageList.filter().map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Searched\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Searchbar\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for Concept...\",\n      onChange: event => search(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Searchbar, \"x2ilVjGGBEAM65NOh+9j1v0Fh5w=\");\n\n_c = Searchbar;\nexport default Searchbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Searchbar\");","map":{"version":3,"sources":["C:/Users/wacht/WebstormProjects/deep-learning/dl-videosearch-react/src/components/Searchbar.js"],"names":["AsyncSelect","useEffect","useState","Axios","Searchbar","props","searchTerm","setSearchTerm","fullImageList","setFullImageList","resultImageList","setResultImageList","get","then","response","data","search","filter","map","val","key","event","target","value"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD,CAHyB,CAKzB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACS,GAAN,CAAU,gCAAV,EAA4CC,IAA5C,CAAkDC,QAAD,IAAc;AAC3DL,MAAAA,gBAAgB,CAACK,QAAQ,CAACC,IAAV,CAAhB;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT,CANyB,CAYzB;;AACA,QAAMC,MAAM,GAAIV,UAAD,IAAgB;AAC3BC,IAAAA,aAAa,CAACD,UAAD,CAAb;AACAE,IAAAA,aAAa,CAACS,MAAd,GAAuBC,GAAvB,CAA2B,CAACC,GAAD,EAAKC,GAAL,KAAa;AACpC,0BACI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAIH,KALD;AAMH,GARD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACI,MAAA,WAAW,EAAC,uBADhB;AAEO,MAAA,QAAQ,EAAEC,KAAK,IAAIL,MAAM,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd;AAFhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAjCD;;GAAMnB,S;;KAAAA,S;AAmCN,eAAeA,SAAf","sourcesContent":["import AsyncSelect from \"react-select/async\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nconst Searchbar = (props) => {\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [fullImageList, setFullImageList] = useState([]);\r\n    const [resultImageList, setResultImageList] = useState([]);\r\n\r\n    // initial get all Images\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:3002/concepts\").then((response) => {\r\n            setFullImageList(response.data);\r\n        })\r\n    }, [])\r\n\r\n    //function for searching data\r\n    const search = (searchTerm) => {\r\n        setSearchTerm(searchTerm);\r\n        fullImageList.filter().map((val,key) => {\r\n            return (\r\n                <div>\r\n                    <p>Searched</p>\r\n                </div>);\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Searchbar\">\r\n            <input type=\"text\"\r\n                placeholder=\"Search for Concept...\"\r\n                   onChange={event => search(event.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbar;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}